---
jobs:
  - name: bump-deps
    public: true
    plan:
      - get: weekly
        trigger: true
      - get: golang-release
      - get: bosh-dns-release
      - task: bump-deps
        file: golang-release/ci/tasks/shared/bump-deps.yml
        params:
          GIT_USER_NAME: CI Bot
          GIT_USER_EMAIL: cf-bosh-eng@pivotal.io
          GO_PACKAGE: golang-1-linux
          SOURCE_PATH: src/bosh-dns
        input_mapping:
          input_repo: bosh-dns-release
        output_mapping:
          output_repo: bumped-bosh-dns-release
      - task: bump-deps-test-acceptance-release
        file: golang-release/ci/tasks/shared/bump-deps.yml
        params:
          GIT_USER_NAME: CI Bot
          GIT_USER_EMAIL: cf-bosh-eng@pivotal.io
          GO_PACKAGE: golang-1-linux
          SOURCE_PATH: src/bosh-dns/acceptance_tests/dns-acceptance-release/src/test-recursor
        input_mapping:
          input_repo: bumped-bosh-dns-release
        output_mapping:
          output_repo: bumped-bosh-dns-release
      - task: bump-deps-debug
        file: golang-release/ci/tasks/shared/bump-deps.yml
        params:
          GIT_USER_NAME: CI Bot
          GIT_USER_EMAIL: cf-bosh-eng@pivotal.io
          GO_PACKAGE: golang-1-linux
          SOURCE_PATH: src/debug
        input_mapping:
          input_repo: bumped-bosh-dns-release
        output_mapping:
          output_repo: bumped-bosh-dns-release
      - task: test-unit
        input_mapping:
          bosh-dns-release: bumped-bosh-dns-release
        file: bosh-dns-release/ci/tasks/test-unit.yml
      - put: bosh-dns-release
        params:
          repository: bumped-bosh-dns-release
          rebase: true

  - name: bump-golang-package
    public: true
    serial: true
    plan:
      - in_parallel:
          - get: bosh-dns-release
          - get: golang-release
            trigger: true
          - get: bosh-stemcell
            resource: warden-jammy-stemcell
          - get: bosh-candidate-release
      - task: bump-golang-package
        file: golang-release/ci/tasks/shared/bump-golang-package.yml
        input_mapping:
          input_repo: bosh-dns-release
        output_mapping:
          output_repo: bosh-dns-release
        params:
          GIT_USER_NAME: CI Bot
          GIT_USER_EMAIL: cf-bosh-eng@pivotal.io
          PACKAGES: [ golang-1-linux, golang-1-windows ]
          PRIVATE_YML: |
            ---
            blobstore:
              provider: gcs
              options:
                credentials_source: static
                json_key: '((cloud-foundry-gcp-credentials))'
      - task: bump-golang-package-test-acceptance-release
        file: golang-release/ci/tasks/shared/bump-golang-package.yml
        input_mapping:
          input_repo: bosh-dns-release
        output_mapping:
          output_repo: bosh-dns-release
        params:
          RELEASE_DIR: src/bosh-dns/acceptance_tests/dns-acceptance-release
          GIT_USER_NAME: CI Bot
          GIT_USER_EMAIL: cf-bosh-eng@pivotal.io
          PACKAGES: [ golang-1-linux ]
          PRIVATE_YML: |
            ---
            blobstore:
              provider: gcs
              options:
                credentials_source: static
                json_key: '((cloud-foundry-gcp-credentials))'
      - task: create
        file: bosh-dns-release/ci/tasks/create-candidate.yml
        output_mapping:
          candidate-release: bumped-release
      - task: test-acceptance
        privileged: true
        file: bosh-dns-release/ci/tasks/test-acceptance.yml
        input_mapping:
          candidate-release: bumped-release
        params:
          BASE_STEMCELL: "ubuntu-jammy"
      - put: bosh-dns-release
        params:
          repository: bosh-dns-release
          rebase: true

  - name: test-unit
    public: true
    plan:
      - get: bosh-dns-release
        trigger: true
      - task: test-unit
        file: bosh-dns-release/ci/tasks/test-unit.yml

  - name: test-unit-windows
    public: true
    serial: true
    plan:
      - get: bosh-dns-release
        trigger: true
      - task: test-unit-windows
        timeout: 1h
        file: bosh-dns-release/ci/tasks/windows/test-unit-windows.yml
        tags: [ "windows-nimbus" ]
        params:
          BOSH_DNS_RECURSOR_ADDRESS: 192.19.189.10

  - name: test-unit-release
    public: true
    plan:
      - get: bosh-dns-release
        trigger: true
      - task: test-unit-release
        file: bosh-dns-release/ci/tasks/test-unit-release.yml

  - name: pre-integration-fan-in
    plan:
      - get: bosh-dns-release
        trigger: true
        passed:
          - test-unit
          - test-unit-windows
          - test-unit-release

  - name: test-acceptance-ubuntu-jammy
    public: true
    serial: true
    plan:
      - in_parallel:
          - get: bosh-dns-release
            passed: [ pre-integration-fan-in ]
            trigger: true
          - get: bosh-stemcell
            resource: warden-jammy-stemcell
          - get: bosh-candidate-release
      - task: create-candidate
        file: bosh-dns-release/ci/tasks/create-candidate.yml
      - task: test-acceptance
        privileged: true
        file: bosh-dns-release/ci/tasks/test-acceptance.yml
        params:
          BASE_STEMCELL: ubuntu-jammy

  - name: test-acceptance-ubuntu-noble
    public: true
    serial: true
    plan:
      - in_parallel:
          - get: bosh-dns-release
            passed: [ pre-integration-fan-in ]
            trigger: true
          - get: bosh-stemcell
            resource: warden-noble-stemcell
          - get: bosh-candidate-release
      - task: create-candidate
        file: bosh-dns-release/ci/tasks/create-candidate.yml
      - task: test-acceptance
        privileged: true
        file: bosh-dns-release/ci/tasks/test-acceptance.yml
        params:
          BASE_STEMCELL: ubuntu-noble

  - name: test-acceptance-windows2019
    public: true
    serial: true
    plan:
      - do:
          - in_parallel:
            - get: bosh-dns-release
              passed:
                - pre-integration-fan-in
              trigger: true
            - get: envs
            - get: bosh-deployment
            - get: linux-stemcell
              resource: aws-jammy-stemcell
            - get: bosh-stemcell-windows
              resource: aws-windows-2019-stemcell
            - get: bosh-candidate-release
            - get: docker-bosh-integration-image
          - task: create-candidate
            file: bosh-dns-release/ci/tasks/create-candidate.yml
          - do:
              - task: bbl-up
                file: bosh-dns-release/ci/tasks/windows/bbl-up.yml
                params:
                  BBL_AWS_ACCESS_KEY_ID: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.username))
                  BBL_AWS_SECRET_ACCESS_KEY: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.password))
                  BBL_AWS_ASSUME_ROLE: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.role_arn))
                  BBL_AWS_REGION: us-west-1
                  BBL_IAAS: aws
                  ENV_NAME: windows2019
                ensure:
                  put: envs
                  params:
                    repository: envs
                    rebase: true
              - task: setup-deploy
                file: bosh-dns-release/ci/tasks/windows/setup-deploy.yml
                params:
                  ENV_NAME: windows2019
              - in_parallel:
                  - task: windows
                    file: bosh-dns-release/ci/tasks/windows/test-acceptance-windows.yml
                    image: docker-bosh-integration-image
                    params:
                      WINDOWS_OS_VERSION: windows2019
                      ENV_NAME: windows2019
                    timeout: 1h
                  - task: windows-nameserver-disabled
                    file: bosh-dns-release/ci/tasks/windows/test-acceptance-windows-nameserver-disabled.yml
                    image: docker-bosh-integration-image
                    params:
                      WINDOWS_OS_VERSION: windows2019
                      ENV_NAME: windows2019
                    timeout: 1h
            ensure:
              task: bbl-destroy
              file: bosh-dns-release/ci/tasks/windows/bbl-destroy.yml
              params:
                BBL_AWS_ACCESS_KEY_ID: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.username))
                BBL_AWS_SECRET_ACCESS_KEY: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.password))
                BBL_AWS_ASSUME_ROLE: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.role_arn))
                BBL_AWS_REGION: us-west-1
                BBL_IAAS: aws
                ENV_NAME: windows2019
              ensure:
                put: envs
                params:
                  repository: envs
                  rebase: true

  - name: test-stress
    public: false
    serial: true
    plan:
      - in_parallel:
        - get: bosh-dns-release
          trigger: true
          passed: [ pre-integration-fan-in ]
        - get: bbl-state
          resource: envs
        - get: bosh-deployment
        - get: docker-release
        - get: aws-jammy-stemcell
        - get: warden-jammy-stemcell
        - get: bosh-docker-cpi-release
      - task: create-candidate
        file: bosh-dns-release/ci/tasks/create-candidate.yml
      - do:
          - task: setup-env
            file: bosh-dns-release/ci/tasks/test-stress/setup-env.yml
            params:
              BBL_AWS_ACCESS_KEY_ID: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.username))
              BBL_AWS_SECRET_ACCESS_KEY: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.password))
              BBL_AWS_ASSUME_ROLE: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.role_arn))
              BBL_AWS_REGION: us-west-1
              BBL_IAAS: aws
              BBL_STATE_DIR: test-stress/bbl-state
            ensure:
              put: envs
              params:
                repository: updated-bbl-state
                rebase: true
          - task: deploy-docker-vms
            file: bosh-dns-release/ci/tasks/test-stress/deploy-docker.yml
            input_mapping:
              bbl-state: updated-bbl-state
              stemcell: aws-jammy-stemcell
          - task: deploy-containers
            file: bosh-dns-release/ci/tasks/test-stress/deploy-n.yml
            input_mapping:
              stemcell: warden-jammy-stemcell
              bbl-state: updated-bbl-state
          - task: stress-containers
            file: bosh-dns-release/ci/tasks/test-stress/run-errand.yml
            input_mapping:
              bbl-state: updated-bbl-state
        ensure:
          task: destroy-env
          file: bosh-dns-release/ci/tasks/test-stress/destroy-env.yml
          input_mapping:
            bbl-state: updated-bbl-state
          params:
            BBL_AWS_ACCESS_KEY_ID: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.username))
            BBL_AWS_SECRET_ACCESS_KEY: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.password))
            BBL_AWS_ASSUME_ROLE: ((bosh-dns-release-bbl-test-stress_assume_aws_access_key.role_arn))
            BBL_STATE_DIR: test-stress/bbl-state
          ensure:
            put: envs
            params:
              repository: cleanup-bbl-state
              rebase: true

  - name: brats-ubuntu-jammy
    serial: true
    plan:
      - do:
          - in_parallel:
              - get: bosh-dns-release
                passed: [ pre-integration-fan-in ]
                trigger: true
              - get: bosh
              - get: stemcell
                resource: warden-jammy-stemcell
              - get: bosh-release
              - get: docker-cpi-image
          - task: create-candidate
            file: bosh-dns-release/ci/tasks/create-candidate.yml
            output_mapping:
              candidate-release: bosh-dns-release
          - task: test-brats # contain base manifest
            file: bosh/ci/shared/brats/test-acceptance.yml
            image: docker-cpi-image
            privileged: true
            input_mapping:
              dns-release: candidate-release
              bosh-ci: bosh
            params:
              BOSH_DIRECTOR_RELEASE_PATH: "bosh-release/release.tgz"
              BOSH_DIRECTOR_RELEASE_VERSION: "latest"
              DNS_RELEASE_FILE_PATH: "dns-release"
              DNS_RELEASE_VERSION: "create"
              FOCUS_SPEC: "BoshDns"
              STEMCELL_OS: "ubuntu-jammy"

  - name: brats-ubuntu-noble
    serial: true
    plan:
      - do:
          - in_parallel:
              - get: bosh-dns-release
                passed: [ pre-integration-fan-in ]
                trigger: true
              - get: bosh
              - get: stemcell
                resource: warden-noble-stemcell
              - get: bosh-release
              - get: docker-cpi-image-noble
          - task: create-candidate
            file: bosh-dns-release/ci/tasks/create-candidate.yml
            output_mapping:
              candidate-release: bosh-dns-release
          - task: test-brats # contain base manifest
            file: bosh/ci/shared/brats/test-acceptance.yml
            image: docker-cpi-image-noble
            privileged: true
            input_mapping:
              dns-release: candidate-release
              bosh-ci: bosh
            params:
              BOSH_DIRECTOR_RELEASE_PATH: "bosh-release/release.tgz"
              BOSH_DIRECTOR_RELEASE_VERSION: "latest"
              DNS_RELEASE_FILE_PATH: "dns-release"
              DNS_RELEASE_VERSION: "create"
              FOCUS_SPEC: "BoshDns"
              STEMCELL_OS: "ubuntu-noble"

  - name: release-new-patch
    serial_groups:
    - version
    plan:
    - get: bosh-dns-release
      passed:
      - delivery
    - put: version
      params:
        bump: patch

  - name: release-new-minor
    serial_groups:
    - version
    plan:
    - get: bosh-dns-release
      passed:
      - delivery
    - put: version
      params:
        bump: minor

  - name: release-new-major
    serial_groups:
    - version
    plan:
    - get: bosh-dns-release
      passed:
      - delivery
    - put: version
      params:
        bump: major

  - name: automatically-release-new-patch
    serial_groups:
    - version
    plan:
    - in_parallel:
      - get: bosh-dns-release
        trigger: true
        passed:
        - delivery
      - get: version
      - get: bosh-shared-ci
      - get: bosh-security-scanner-image
    - try:
        task: check-for-updated-golang-package
        file: bosh-shared-ci/tasks/release/check-for-updated-vendored-packages.yml
        image: bosh-security-scanner-image
        input_mapping:
          input_repo: bosh-dns-release
        params:
          PACKAGES: [ golang-1-linux, golang-1-windows ]
        on_success:
          do:
            - put: release-notes
              params:
                file: release-notes/release-notes.md
            - put: version
              params:
                bump: patch
    - try:
        task: check-for-patched-cves
        file: bosh-shared-ci/tasks/release/check-for-patched-cves.yml
        image: bosh-security-scanner-image
        input_mapping:
          input_repo: bosh-dns-release
        params:
          SEVERITY: CRITICAL,HIGH
          SOURCE_PATH: src/bosh-dns
        on_success:
          do:
            - put: release-notes
              params:
                file: release-notes/release-notes.md
            - put: version
              params:
                bump: patch
    - task: ensure-package-check-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: bosh-security-scanner-image
      input_mapping:
        task-output-folder: package-updates
    - task: ensure-cve-checker-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: bosh-security-scanner-image
      input_mapping:
        task-output-folder: patched_cves

  - name: finalize-release
    serial_groups:
      - version
    plan:
      - in_parallel:
          - get: bosh-dns-release
            passed: [ delivery ]
          - get: version
            trigger: true
          - get: release-notes
          - get: bosh-shared-ci
      - task: finalize-release
        file: bosh-shared-ci/tasks/release/create-final-release.yml
        input_mapping:
          release_repo: bosh-dns-release
          version: version
        params:
          GIT_USER_NAME: CI Bot
          GIT_USER_EMAIL: bots@cloudfoundry.org
          PRIVATE_YML: |
            blobstore:
              provider: gcs
              options:
                credentials_source: static
                json_key: '((cloud-foundry-gcp-credentials))'
      - put: bosh-dns-release
        params:
          rebase: true
          repository: release_repo
          tag: release_metadata/tag-name
      - put: github-release
        params:
          name: release_metadata/tag-name
          tag: release_metadata/tag-name
          body: release-notes/release-notes.md
          commitish: bosh-dns-release/.git/ref
          generate_release_notes: true
      - put: release-notes
        params:
          file: release_metadata/empty-file

  - name: delivery
    plan:
      - in_parallel:
          - get: bosh-dns-release
            version: every
            trigger: true
            passed:
              - test-stress
              - test-acceptance-ubuntu-jammy
              - test-acceptance-windows2019
              - brats-ubuntu-jammy

resources:
  - name: bosh-shared-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-shared-ci.git
      username: bosh-admin-bot
      password: ((github_public_repo_token))

  - name: bosh-dns-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-dns-release
      branch: master
      username: bosh-admin-bot
      password: ((github_read_write_token))
      ignore_paths:
        - ci/docker

  - name: github-release
    type: github-release
    source:
      owner: cloudfoundry
      repository: bosh-dns-release
      access_token: ((github_read_write_token))

  - name: golang-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-golang-release.git
      branch: main

  - name: version
    type: semver
    source:
      driver: git
      uri: https://github.com/cloudfoundry/bosh-dns-release.git
      username: bosh-admin-bot
      password: ((github_read_write_token))
      branch: release-semver
      file: VERSION
      initial_version: '1.39.0'

  - name: bosh
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh

  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master

  - name: docker-release
    type: bosh-io-release
    source:
      repository: cppforlife/docker-release

  - name: bosh-docker-cpi-release
    type: bosh-io-release
    source:
      repository: cppforlife/bosh-docker-cpi-release

  - name: aws-windows-2019-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-aws-xen-hvm-windows2019-go_agent

  - name: aws-jammy-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent

  - name: warden-jammy-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-jammy-go_agent

  - name: warden-noble-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-noble

  - name: bosh-candidate-release
    type: gcs-resource
    source:
      bucket: bosh-director-oss-ci-candidate-release-tarballs
      json_key: ((bosh_director_oss_ci_service_account_json))
      versioned_file: "bosh-dev-release.tgz"

  - name: envs
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/bosh-bbl-ci-envs.git
      username: bosh-admin-bot
      password: ((github_read_write_token))

  - name: release-notes
    type: gcs-resource
    source:
      bucket: bosh-ci-release-notes
      json_key: ((broadcom_labs_gcp_credentials_json))
      versioned_file: bosh-dns-release/release-notes.md
      initial_content_text: ""

  - name: docker-cpi-image
    type: registry-image
    source:
      tag: main
      repository: bosh/docker-cpi
      username: ((docker.username))
      password: ((docker.password))

  - name: docker-cpi-image-noble
    type: registry-image
    source:
      tag: noble
      repository: bosh/docker-cpi
      username: ((docker.username))
      password: ((docker.password))

  - name: docker-bosh-integration-image
    type: registry-image
    source:
      repository: bosh/integration
      username: ((docker.username))
      password: ((docker.password))

  - name: bosh-security-scanner-image
    type: registry-image
    source:
      repository: bosh/security-scanner
      username: ((docker.username))
      password: ((docker.password))

  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [ Saturday ]

resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource
      username: ((docker.username))
      password: ((docker.password))

  - name: semver
    type: docker-image
    source:
      repository: concourse/semver-resource
      tag: 1.6

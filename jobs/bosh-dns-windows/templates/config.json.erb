<%=
{
  address: p('address', spec.ip),
  port: p('port'),
  log_level: p('log_level'),
  recursors: p('recursors'),
  excluded_recursors: p('excluded_recursors'),
  records_file: p('records_file'),
  addresses_files_glob: p('addresses_files_glob'),
  alias_files_glob: p('alias_files_glob'),
  upcheck_domains: p('upcheck_domains'),
  recursor_timeout: p('recursor_timeout'),
  request_timeout: p('request_timeout'),
  recursor_selection: p('recursor_selection'),
  jobs_dir: '/var/vcap/jobs',
  api: {
    port: p('api.port'),
    certificate_file: '/var/vcap/jobs/bosh-dns-windows/config/certs/api/server.crt',
    private_key_file: '/var/vcap/jobs/bosh-dns-windows/config/certs/api/server.key',
    ca_file: '/var/vcap/jobs/bosh-dns-windows/config/certs/api/server_ca.crt',
  },
  health: {
    enabled: p('health.enabled'),
    port: p('health.server.port'),
    certificate_file: '/var/vcap/jobs/bosh-dns-windows/config/certs/health/client.crt',
    private_key_file: '/var/vcap/jobs/bosh-dns-windows/config/certs/health/client.key',
    ca_file: '/var/vcap/jobs/bosh-dns-windows/config/certs/health/client_ca.crt',
    check_interval: p('health.remote_health_interval'),
    max_tracked_queries: p('health.max_tracked_queries'),
    synchronous_check_timeout: p('health.synchronous_check_timeout')
  },
  metrics: {
    enabled: p('metrics.enabled'),
    port: p('metrics.port'),
    address: p('metrics.address')
  },
  cache: {
    enabled: p('cache.enabled')
  },
  handlers_files_glob: p('handlers_files_glob'),
  internal_upcheck_domain: {
    enabled: p('internal_upcheck_domain.enabled'),
    dns_query: "q-i#{spec.index}.#{spec.name}.*.#{spec.deployment}.bosh."
  },
  logging: {
    format: {
      timestamp: p('logging.format.timestamp')
    }
  }
}.to_json
%>
